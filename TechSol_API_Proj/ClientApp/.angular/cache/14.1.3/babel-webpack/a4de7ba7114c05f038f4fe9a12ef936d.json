{"ast":null,"code":"import { Customer } from '../models/customer.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/customer.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = [\"customerForm\"];\n\nfunction CustomersComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" First Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CustomersComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Last Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CustomersComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Date of Birth is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CustomersComponent_tr_42_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function CustomersComponent_tr_42_button_11_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const customer_r8 = i0.ɵɵnextContext().$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.deleteCustomer(customer_r8.id));\n    });\n    i0.ɵɵtext(1, \"Delete\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CustomersComponent_tr_42_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\", 20)(9, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function CustomersComponent_tr_42_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const customer_r8 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.editCustomer(customer_r8));\n    });\n    i0.ɵɵtext(10, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, CustomersComponent_tr_42_button_11_Template, 2, 0, \"button\", 22);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const customer_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r8.firstName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(customer_r8.lastName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 4, customer_r8.dateOfBirth));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", customer_r8.id);\n  }\n}\n\nexport let CustomersComponent = /*#__PURE__*/(() => {\n  class CustomersComponent {\n    constructor(customerService) {\n      this.customerService = customerService;\n      this.customer = new Customer();\n      this.customers = []; //customer: Customer = {}; // Object for binding form data\n\n      this.isUpdateMode = false; // Flag to check if it's add or update operation\n    }\n\n    ngOnInit() {\n      this.loadCustomers();\n    }\n\n    loadCustomers() {\n      this.customerService.getCustomers().subscribe(data => {\n        this.customers = data;\n      }, error => {\n        console.error('Error fetching customers', error);\n      });\n    }\n\n    submitCustomer() {\n      // Check if the form is valid\n      if (this.customerForm.valid) {\n        if (this.isUpdateMode) {\n          this.updateCustomer();\n        } else {\n          this.addCustomer();\n        }\n      } else {\n        // Handle the invalid form case\n        console.error('The form is invalid');\n      }\n    }\n\n    addCustomer() {\n      this.customerService.addCustomer(this.customer).subscribe(data => {\n        this.customers.push(data);\n        this.customerForm.reset(); // Reset the form here\n\n        this.customer = new Customer(); // Reset the customer object\n\n        this.isUpdateMode = false; // Ensure you're not in update mode\n      }, error => {\n        console.error('Error adding customer', error);\n      });\n    }\n\n    editCustomer(customer) {\n      this.customer = Object.assign({}, customer);\n      this.isUpdateMode = true;\n    }\n\n    updateCustomer() {\n      if (this.customer && this.customer.id) {\n        this.customerService.updateCustomer(this.customer.id, this.customer).subscribe(data => {\n          // Update the customer list or re-fetch from the server\n          this.loadCustomers();\n          this.customer = {}; // Reset the form\n\n          this.isUpdateMode = false;\n        }, error => {\n          console.error('Error updating customer', error);\n        });\n      } else {\n        console.error('Customer ID is missing');\n      }\n    }\n\n    deleteCustomer(id) {\n      if (confirm('Are you sure you want to delete this customer?')) {\n        this.customerService.deleteCustomer(id).subscribe(() => {\n          // Remove the customer from the list\n          this.customers = this.customers.filter(customer => customer.id !== id);\n        }, error => {\n          console.error('Error deleting customer', error);\n        });\n      }\n    }\n\n  }\n\n  CustomersComponent.ɵfac = function CustomersComponent_Factory(t) {\n    return new (t || CustomersComponent)(i0.ɵɵdirectiveInject(i1.CustomerService));\n  };\n\n  CustomersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CustomersComponent,\n    selectors: [[\"app-customers\"]],\n    viewQuery: function CustomersComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customerForm = _t.first);\n      }\n    },\n    decls: 43,\n    vars: 9,\n    consts: [[1, \"container\"], [1, \"customer-form\"], [\"novalidate\", \"\", 3, \"ngSubmit\"], [\"customerForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"firstName\"], [\"type\", \"text\", \"id\", \"firstName\", \"name\", \"firstName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"firstName\", \"ngModel\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"lastName\"], [\"type\", \"text\", \"id\", \"lastName\", \"name\", \"lastName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"lastName\", \"ngModel\"], [\"for\", \"dateOfBirth\"], [\"type\", \"date\", \"id\", \"dateOfBirth\", \"name\", \"dateOfBirth\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"dateOfBirth\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"customer-list\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"alert\", \"alert-danger\"], [1, \"action-buttons\"], [1, \"btn\", \"btn-edit\", 3, \"click\"], [\"class\", \"btn btn-danger\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function CustomersComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Customer Management\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"form\", 2, 3);\n        i0.ɵɵlistener(\"ngSubmit\", function CustomersComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.submitCustomer();\n        });\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"First Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 6, 7);\n        i0.ɵɵlistener(\"ngModelChange\", function CustomersComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.customer.firstName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, CustomersComponent_div_11_Template, 2, 0, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\", 9);\n        i0.ɵɵtext(14, \"Last Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 10, 11);\n        i0.ɵɵlistener(\"ngModelChange\", function CustomersComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.customer.lastName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, CustomersComponent_div_17_Template, 2, 0, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 4)(19, \"label\", 12);\n        i0.ɵɵtext(20, \"Date of Birth:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"input\", 13, 14);\n        i0.ɵɵlistener(\"ngModelChange\", function CustomersComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.customer.dateOfBirth = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, CustomersComponent_div_23_Template, 2, 0, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 15);\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(26, \"hr\");\n        i0.ɵɵelementStart(27, \"div\", 16)(28, \"h3\");\n        i0.ɵɵtext(29, \"Customer List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"table\", 17)(31, \"thead\")(32, \"tr\")(33, \"th\");\n        i0.ɵɵtext(34, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"th\");\n        i0.ɵɵtext(36, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"th\");\n        i0.ɵɵtext(38, \"Date of Birth\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"th\");\n        i0.ɵɵtext(40, \"Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(41, \"tbody\");\n        i0.ɵɵtemplate(42, CustomersComponent_tr_42_Template, 12, 6, \"tr\", 18);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(5);\n\n        const _r1 = i0.ɵɵreference(10);\n\n        const _r3 = i0.ɵɵreference(16);\n\n        const _r5 = i0.ɵɵreference(22);\n\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.customer.firstName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r1.invalid && (_r1.dirty || _r1.touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.customer.lastName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r3.invalid && (_r3.dirty || _r3.touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.customer.dateOfBirth);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r5.invalid && (_r5.dirty || _r5.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !_r0.form.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx.isUpdateMode ? \"Update\" : \"Add\", \" Customer\");\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngForOf\", ctx.customers);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i2.DatePipe],\n    styles: [\".container[_ngcontent-%COMP%]{max-width:800px;margin:0 auto;padding:20px;font-family:Arial,sans-serif}.customer-form[_ngcontent-%COMP%]{background-color:#f2f2f2;padding:20px;border-radius:8px;margin-bottom:20px}.customer-form[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{display:grid;grid-gap:10px}.form-group[_ngcontent-%COMP%]{margin-bottom:15px}.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{display:block;margin-bottom:5px}.form-group[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%], .form-group[_ngcontent-%COMP%]   input[type=date][_ngcontent-%COMP%]{width:100%;padding:8px;border:1px solid #ccc;border-radius:4px}.btn-primary[_ngcontent-%COMP%]{background-color:#007bff;border-color:#007bff;color:#fff;padding:10px 15px;border-radius:4px;cursor:pointer}.btn-primary[_ngcontent-%COMP%]:hover{background-color:#0056b3}.customer-list[_ngcontent-%COMP%]{background-color:#fff;padding:20px;border-radius:8px;box-shadow:0 4px 8px #0000001a;margin-top:20px}.customer-list[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{color:#333;margin-bottom:20px}.table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse}.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{text-align:left;padding:12px;border-bottom:1px solid #eaeaea}.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#f8f8f8}.action-buttons[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:start;gap:15px}.btn[_ngcontent-%COMP%]{border:none;color:#fff;padding:8px 16px;text-align:center;text-decoration:none;display:inline-block;font-size:14px;border-radius:4px;cursor:pointer;transition:background-color .3s ease;box-shadow:0 2px 4px #0000001a}.btn-edit[_ngcontent-%COMP%]{background-color:#4caf50}.btn-delete[_ngcontent-%COMP%]{background-color:#f44336}.btn-edit[_ngcontent-%COMP%]:hover{background-color:#45a049}.btn-delete[_ngcontent-%COMP%]:hover{background-color:#d32f2f}.alert[_ngcontent-%COMP%]{color:#721c24;background-color:#f8d7da;border-color:#f5c6cb;padding:10px;margin-top:5px;border-radius:4px}\"]\n  });\n  return CustomersComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}